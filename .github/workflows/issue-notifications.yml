name: Issue and Project Notification

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  project_card:
    types: [moved]
  issue_comment:
    types: [created, edited]

jobs:
  send_email:
    runs-on: ubuntu-latest
    steps:
      - name: Send email notification on issue event
        if: ${{ github.event_name == 'issues' && github.event.action == 'opened' }}
        env:
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 465
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          set -x  # Habilitar el modo de depuración
          LABELS=$(echo ${{ github.event.issue.labels }} | jq -r '.[].name' | tr '\n' ', ' | sed 's/, $//')
          echo "A new issue has been created in the repository:"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Description: ${{ github.event.issue.body }}"
          echo "Issue URL: ${{ github.event.issue.html_url }}"
          echo "Labels: $LABELS"

          echo "Sending email notification..."
          response=$(curl -s --url "smtps://$SMTP_SERVER:$SMTP_PORT" --ssl-reqd \
            --mail-from "${EMAIL_USERNAME}" \
            --mail-rcpt "alejandragarcia1@upb.edu" \
            --user "${EMAIL_USERNAME}:${EMAIL_PASSWORD}" \
            --upload-file - <<END
          From: aleandy7@gmail.com
          To: alejandragarcia1@upb.edu
          Subject: New Issue: ${{ github.event.issue.title }}

          A new issue has been created in the repository:
          Issue Title: ${{ github.event.issue.title }}
          Issue Description: ${{ github.event.issue.body }}
          Issue URL: ${{ github.event.issue.html_url }}
          Labels: $LABELS
          END
          )

          echo "Response from email server: $response"

          # Verifica el código de salida de curl
          if [ $? -ne 0 ]; then
            echo "Error: Failed to send email."
            exit 1
          fi

      - name: Send email notification on issue label event
        if: ${{ github.event_name == 'issues' && (github.event.action == 'labeled' || github.event.action == 'unlabeled') }}
        env:
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 465
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          set -x  # Habilitar el modo de depuración
          echo "An issue label has been changed:"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Label: ${{ github.event.label.name }}"
          echo "Issue URL: ${{ github.event.issue.html_url }}"

          echo "Sending email notification..."
          response=$(curl -s --url "smtps://$SMTP_SERVER:$SMTP_PORT" --ssl-reqd \
            --mail-from "${EMAIL_USERNAME}" \
            --mail-rcpt "alejandragarcia1@upb.edu" \
            --user "${EMAIL_USERNAME}:${EMAIL_PASSWORD}" \
            --upload-file - <<END
          From: aleandy7@gmail.com
          To: alejandragarcia1@upb.edu
          Subject: Issue Label Changed: ${{ github.event.issue.title }}

          An issue label has been changed:
          Issue Title: ${{ github.event.issue.title }}
          Label: ${{ github.event.label.name }}
          Issue URL: ${{ github.event.issue.html_url }}
          END
          )

          echo "Response from email server: $response"

          # Verifica el código de salida de curl
          if [ $? -ne 0 ]; then
            echo "Error: Failed to send email."
            exit 1
          fi

      - name: Send email notification on project card event
        if: ${{ github.event_name == 'project_card' }}
        env:
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 465
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          set -x  # Habilitar el modo de depuración
          echo "A card has been moved in the project:"
          echo "Card ID: ${{ github.event.project_card.id }}"
          echo "Card Note: ${{ github.event.project_card.note }}"
          echo "Card URL: ${{ github.event.project_card.url }}"
          
          echo "Sending email notification..."
          response=$(curl -s --url "smtps://$SMTP_SERVER:$SMTP_PORT" --ssl-reqd \
            --mail-from "${EMAIL_USERNAME}" \
            --mail-rcpt "alejandragarcia1@upb.edu" \
            --user "${EMAIL_USERNAME}:${EMAIL_PASSWORD}" \
            --upload-file - <<END
          From: aleandy7@gmail.com
          To: alejandragarcia1@upb.edu
          Subject: Card Moved: ${{ github.event.project_card.note }}

          A card has been moved in the project:
          Card ID: ${{ github.event.project_card.id }}
          Card Note: ${{ github.event.project_card.note }}
          Card URL: ${{ github.event.project_card.url }}
          END
          )

          echo "Response from email server: $response"

          # Verifica el código de salida de curl
          if [ $? -ne 0 ]; then
            echo "Error: Failed to send email."
            exit 1
          fi

      - name: Send email notification on issue comment event
        if: ${{ github.event_name == 'issue_comment' }}
        env:
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 465
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          set -x  # Habilitar el modo de depuración
          echo "A comment has been created or edited in an issue:"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Comment Body: ${{ github.event.comment.body }}"
          echo "Comment URL: ${{ github.event.comment.html_url }}"
          
          echo "Sending email notification..."
          response=$(curl -s --url "smtps://$SMTP_SERVER:$SMTP_PORT" --ssl-reqd \
            --mail-from "${EMAIL_USERNAME}" \
            --mail-rcpt "alejandragarcia1@upb.edu" \
            --user "${EMAIL_USERNAME}:${EMAIL_PASSWORD}" \
            --upload-file - <<END
          From: aleandy7@gmail.com
          To: alejandragarcia1@upb.edu
          Subject: Comment Added: ${{ github.event.issue.title }}

          A comment has been created or edited in an issue:
          Issue Title: ${{ github.event.issue.title }}
          Comment Body: ${{ github.event.comment.body }}
          Comment URL: ${{ github.event.comment.html_url }}
          END
          )

          echo "Response from email server: $response"

          # Verifica el código de salida de curl
          if [ $? -ne 0 ]; then
            echo "Error: Failed to send email."
            exit 1
          fi
